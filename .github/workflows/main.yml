# This workflow will build and push a new container image to Amazon ECR,
# and then will deploy a new task definition to Amazon ECS, when a release is created

on:
  push:
    branches:
    - develop
    - master
  workflow_dispatch:

# Global environment variables
env:
    CONTAINER_NAME: churchmanager-ui
    ECR_REPOSITORY: prod-churchmanager-ui-ecr-repository

name: Deploy to Netlify

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    #environment: Development

    steps:

    -   name: ‚öôÔ∏è Set env to Test
        if: endsWith(github.ref, '/develop')
        run: |
            echo "ENVIRONMENT=test" >> $GITHUB_ENV
            echo "NETLIFY_SITE_ID=b4fb3361-8503-409a-a30c-c792e6740972" >> $GITHUB_ENV  #  API ID is NETLIFY_SITE_ID

    -   name: ‚öôÔ∏è Set env to Production
        if: endsWith(github.ref, '/master')
        run: |
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
            echo "NETLIFY_SITE_ID=6b92198d-66b1-4dac-9466-74cf906d305d" >> $GITHUB_ENV  #  API ID is NETLIFY_SITE_ID

    - name: üõí Checkout
      uses: actions/checkout@v2

    - name: ‚öôÔ∏è Set current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d')"

    - name: üõ†Ô∏è Update BuildInfo version
      id: buildinfo
      env:
          VERSION: ${{ steps.date.outputs.date }}-${{ github.run_number }}-${{ env.ENVIRONMENT }}
      run: |
          printf '{"version":"%s"}' $VERSION > ./buildinfo.json
          cat ./buildinfo.json # just some logging
      working-directory: ./src/assets

    - name: ‚öôÔ∏è Use Node 14.x
      uses: actions/setup-node@v1
      with:
          node-version: '14.x'
    - name: üì• Install dependencies
      run: npm ci --quiet
    - name: üõ†Ô∏è Build
      run: |
          npm run ng build -- --configuration ${{ env.ENVIRONMENT }} --output-path=dist
          cp ./scripts/_headers ./dist/_headers # headers file for Netlify

    - name: ‚è≠ Deploy to Netlify
      uses: nwtgck/actions-netlify@v1.2
      with:
          publish-dir: './dist'
          deploy-message:  Deploy ${{ env.ENVIRONMENT }} (${{ github.run_number }}) from GitHub
          enable-pull-request-comment: false
          enable-commit-comment: true
          #overwrites-pull-request-comment: true
      env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ env.NETLIFY_SITE_ID }}
          timeout-minutes: 1

    - name: üó≥Ô∏è Archive Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dist-files
        path: |
          dist
